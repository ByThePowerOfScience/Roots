buildscript {
    repositories {
        // jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath("net.minecraftforge.gradle:ForgeGradle:3.+") {
            changing = true
        }
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'idea'

version = "${minecraft_version}-${mod_version}"
group = "epicsquid.roots"
archivesBaseName = "Roots"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    
    accessTransformer = file('src/main/resources/META-INF/roots_at.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            
            args '--username=Dev'
            
            property 'forge.logging.markers', 'REGISTRIES'
            
            property 'forge.logging.console.level', 'debug'
            
            
            mods {
                roots {
                    source sourceSets.main
                }
            }
        }
        
        server {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'
            
            property 'forge.logging.console.level', 'debug'
            
            mods {
                roots {
                    source sourceSets.main
                }
            }
        }
    }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    
    
    implementation fg.deobf('curse.maven:MysticalWorld-282940:3460961')
    implementation fg.deobf('curse.maven:MysticalLib-277064:3483816')
    compileOnly fg.deobf('curse.maven:JustEnoughResources-240630:2728585') {
        exclude group: "mezz.jei"
    }
    implementation fg.deobf('curse.maven:SimpleHarvest-240783:2897811')
    
    implementation "vazkii.patchouli:Patchouli:${patchouli_version}"
    compileOnly fg.deobf("curse.maven:Baubles-227083:2518667")
    
    compileOnly fg.deobf("mezz.jei:jei_${minecraft_version}:${jei_version}")
    
    compileOnly fg.deobf("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${ct_version}")
    compileOnly fg.deobf("CraftTweaker2:CraftTweaker2-API:4.+")
    compileOnly "CraftTweaker2:ZenScript:4.0.+"
    
    
    compileOnly(fg.deobf("vazkii.botania:Botania:${botania_version}")) {
        exclude group: "mezz.jei"
    }
    
    compileOnly fg.deobf("curse.maven:Thaumcraft6-223628:2629023")
    
    compileOnly(fg.deobf("curse.maven:Hwyla-253449:2568751")) {
        exclude group: "mezz.jei"
    }
    compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${top_version}")
    
}

repositories {
    mavenLocal()
    maven {
        name = 'CurseMaven'
        url = "https://cursemaven.com/"
        
    }
    maven {
        name = 'Patchouli'
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl/"
    }
    maven {
        name = "MMD Maven"
        url 'https://maven.mcmoddev.com/'
    }
    maven {
        //Also contains Patchouli
        name = "Jared Maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = 'Tterrag Maven'
        url "http://maven.tterrag.com/"
    }
}

jar {
    manifest {
        attributes(
                'FMLAT': 'roots_at.cfg',
        )
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft_version
    
    
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft_version
    }
    
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'
}

idea {
    module {
        downloadSources = false
        downloadJavadoc = true
    }
}
sourceSets {
    main.output.resourcesDir = main.java.outputDir
}

task generateModpackZip(type: Exec, group: 'buildruns') {
    commandLine("python3", "./python/CustomRunClient.py")
}

task updateModpack(type: Exec, group: 'buildruns') {
    dependsOn(build)
    commandLine("python3", "./python/UpdateModpack.py")
}

task updateCFModpack(type: Exec, group: 'buildruns') {
    dependsOn(build)
    commandLine("python3", "./python/UpdateCFModpack.py")
}

task copyTestZS(type: Copy) {
    from "./" include "Test.zs" into "./run/scripts"
}
